#!/bin/bash
condir="$HOME/.ssh"
confile="$condir/fsconfig"

function fetchHostAttribute(){
    numhosts=$(sed -n "/$1$/,/^Host/p" "$confile"|grep "$2"|awk '{print $2}'|wc -l);
    [[ "$numhosts" -gt "1" ]] && echo "1" && exit 1;
    sed -n "/$1$/,/^Host/p" "$confile"|grep "$2"|awk '{print $2}';
}

if [ ! -d "$condir" ]; then
    mkdir "$HOME"/.ssh
fi

if [ ! -f "$confile" ]; then
        cat fsconfig > "$condir"/fsconfig
fi

function print_usage(){
echo 'usage: sshmount [options] [user@]host

sshmount makes use of sshfs to mount folders over ssh and of fusermount to unmount the folders
[options] should always to be specified before [user]@host

fusermount options:

[unmount]
    -u HOST                 unmount and delete the mountpoint

sshfs options:';
sshfs --help;
}

flags=();
while getopts 'fsCu:p:o:d1hV' flag; do
    case ${flag} in
       u) LD=$(fetchHostAttribute "$2" 'LocalDirectory');
           [ -n "$LD" ] && { fusermount -"$flag" "$LD" && rmdir "$LD"; }\
               || echo host missing LocalDirectory attribute in "$confile"
           exit;;
       p|o) flags+=(-$flag "${OPTARG}");;
       C|f|1|s|d) flags+=(-"$flag");;
       V) sshfs --version;exit;;
       *) print_usage;
           exit;;
    esac
done

if [ -z "${flags[*]}" ]; then
    Host=$1
else
    Host=$BASH_ARGV
fi

if [ -z "$Host" ]; then
    print_usage;
    exit
fi
LD=$(fetchHostAttribute "$Host" 'LocalDirectory');
#################################################################################
# the first host in fsconfig can have two localdirectories and remote directories
#   it should then be of the form
#        LocalDirectory /path/to/local/directory
#        RemoteDirectory /path/to/remote/directory
#   Host host
#        LocalDirectory /path/to/local/directory
#        RemoteDirectory /path/to/remote/directory
#################################################################################
[[ "$LD" = *"$Host" ]] && { Host=$(sed -n "/$Host$/,/^Host/p" "$confile"|grep Host|awk '{print $2}'); }

[ "$LD" = "1" ] && { echo no unique match! check in the "$confile" that "$Host" is only used once;exit 1; }
[ ! -d "$LD" ] && mkdir "$LD";
[ -z "$LD" ] && echo host missing LocalDirectory attribute in "$confile" \
    || RD=$(fetchHostAttribute "$Host" 'RemoteDirectory')
[ -z "$RD" ] && echo host missing RemoteDirectory attribute in "$confile" \
    || { set -x; sshfs "${flags[@]}" "$LD" "$Host":"$RD"; } &&
echo "$Host mounted at $LD";
